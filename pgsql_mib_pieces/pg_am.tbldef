pg_am	"The catalog pg_am stores information about index access methods. There is one row for each index access method supported by the system."	"An access method"	pgsqlCatalogTables	2	"pgsnmpdConnID, rdbmsDbIndex, entryOID"
"entryOID"	"INTEGER"	"OID of this entry"	1	not-accessible
amname	DisplayString	"Name of the access method"
amstrategies	INTEGER	"Number of operator strategies for this access method"
amsupport	INTEGER	"Number of support routines for this access method"
amorderstrategy	INTEGER	"Zero if the index offers no sort order, otherwise the strategy number of the strategy operator that describes the sort order"
amcanunique	TruthValue	"Does the access method support unique indexes?"
amcanmulticol	TruthValue	"Does the access method support multicolumn indexes?"
amoptionalkey	TruthValue	"Does the access method support a scan without any constraint for the first index column?"
amindexnulls	TruthValue	"Does the access method support null index entries?"
amstorage	TruthValue	"Can index storage data type differ from column data type?"
amclusterable	TruthValue	"Can an index of this type be clustered on?"
aminsert	INTEGER	"Insert this tuple" function"
ambeginscan	INTEGER	"Start new scan" function"
amgettuple	INTEGER	"Next valid tuple" function"
amgetmulti	INTEGER	"Fetch multiple tuples" function"
amrescan	INTEGER	"Restart this scan" function"
amendscan	INTEGER	"End this scan" function"
ammarkpos	INTEGER	"Mark current scan position" function"
amrestrpos	INTEGER	"Restore marked scan position" function"
ambuild	INTEGER	"Build new index" function"
ambulkdelete	INTEGER	"Bulk-delete function"
amvacuumcleanup	INTEGER	"Post- VACUUM cleanup function"
amcostestimate	INTEGER	"Function to estimate cost of an index scan"
amoptions	INTEGER	"Function to parse and validate reloptions for an index"
