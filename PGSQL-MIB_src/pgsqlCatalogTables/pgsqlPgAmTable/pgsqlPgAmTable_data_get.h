/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.18.2.1 $ of : mfd-data-get.m2c,v $
 *
 * $Id: pgsqlPgAmTable_data_get.h,v 1.1 2008/01/17 12:29:36 eggyknap Exp $
 *
 * @file pgsqlPgAmTable_data_get.h
 *
 * @addtogroup get
 *
 * Prototypes for get functions
 *
 * @{
 */
#ifndef PGSQLPGAMTABLE_DATA_GET_H
#define PGSQLPGAMTABLE_DATA_GET_H

#ifdef __cplusplus
extern "C" {
#endif

/* *********************************************************************
 * GET function declarations
 */

/* *********************************************************************
 * GET Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table pgsqlPgAmTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * pgsqlPgAmTable is subid 2 of pgsqlCatalogTables.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.27645.1.2.2, length: 10
*/
    /*
     * indexes
     */
    int pgsnmpdConnID_map(char **mib_pgsnmpdConnID_val_ptr_ptr, size_t *mib_pgsnmpdConnID_val_ptr_len_ptr, char *raw_pgsnmpdConnID_val_ptr, size_t raw_pgsnmpdConnID_val_ptr_len, int allow_realloc);
    int rdbmsDbIndex_map(long *mib_rdbmsDbIndex_val_ptr, long raw_rdbmsDbIndex_val);
    int pgsqlPgAmEntryOID_map(long *mib_pgsqlPgAmEntryOID_val_ptr, long raw_pgsqlPgAmEntryOID_val);

    int pgsqlPgAmAmname_map(char **mib_pgsqlPgAmAmname_val_ptr_ptr, size_t *mib_pgsqlPgAmAmname_val_ptr_len_ptr, char *raw_pgsqlPgAmAmname_val_ptr, size_t raw_pgsqlPgAmAmname_val_ptr_len, int allow_realloc);
    int pgsqlPgAmAmname_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, char **pgsqlPgAmAmname_val_ptr_ptr, size_t *pgsqlPgAmAmname_val_ptr_len_ptr );
    int pgsqlPgAmAmstrategies_map(long *mib_pgsqlPgAmAmstrategies_val_ptr, long raw_pgsqlPgAmAmstrategies_val);
    int pgsqlPgAmAmstrategies_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmstrategies_val_ptr );
    int pgsqlPgAmAmsupport_map(long *mib_pgsqlPgAmAmsupport_val_ptr, long raw_pgsqlPgAmAmsupport_val);
    int pgsqlPgAmAmsupport_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmsupport_val_ptr );
    int pgsqlPgAmAmorderstrategy_map(long *mib_pgsqlPgAmAmorderstrategy_val_ptr, long raw_pgsqlPgAmAmorderstrategy_val);
    int pgsqlPgAmAmorderstrategy_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmorderstrategy_val_ptr );
    int pgsqlPgAmAmcanunique_map(u_long *mib_pgsqlPgAmAmcanunique_val_ptr, u_long raw_pgsqlPgAmAmcanunique_val);
    int pgsqlPgAmAmcanunique_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, u_long * pgsqlPgAmAmcanunique_val_ptr );
    int pgsqlPgAmAmcanmulticol_map(u_long *mib_pgsqlPgAmAmcanmulticol_val_ptr, u_long raw_pgsqlPgAmAmcanmulticol_val);
    int pgsqlPgAmAmcanmulticol_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, u_long * pgsqlPgAmAmcanmulticol_val_ptr );
    int pgsqlPgAmAmoptionalkey_map(u_long *mib_pgsqlPgAmAmoptionalkey_val_ptr, u_long raw_pgsqlPgAmAmoptionalkey_val);
    int pgsqlPgAmAmoptionalkey_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, u_long * pgsqlPgAmAmoptionalkey_val_ptr );
    int pgsqlPgAmAmindexnulls_map(u_long *mib_pgsqlPgAmAmindexnulls_val_ptr, u_long raw_pgsqlPgAmAmindexnulls_val);
    int pgsqlPgAmAmindexnulls_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, u_long * pgsqlPgAmAmindexnulls_val_ptr );
    int pgsqlPgAmAmstorage_map(u_long *mib_pgsqlPgAmAmstorage_val_ptr, u_long raw_pgsqlPgAmAmstorage_val);
    int pgsqlPgAmAmstorage_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, u_long * pgsqlPgAmAmstorage_val_ptr );
    int pgsqlPgAmAmclusterable_map(u_long *mib_pgsqlPgAmAmclusterable_val_ptr, u_long raw_pgsqlPgAmAmclusterable_val);
    int pgsqlPgAmAmclusterable_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, u_long * pgsqlPgAmAmclusterable_val_ptr );
    int pgsqlPgAmAminsert_map(long *mib_pgsqlPgAmAminsert_val_ptr, long raw_pgsqlPgAmAminsert_val);
    int pgsqlPgAmAminsert_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAminsert_val_ptr );
    int pgsqlPgAmAmbeginscan_map(long *mib_pgsqlPgAmAmbeginscan_val_ptr, long raw_pgsqlPgAmAmbeginscan_val);
    int pgsqlPgAmAmbeginscan_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmbeginscan_val_ptr );
    int pgsqlPgAmAmgettuple_map(long *mib_pgsqlPgAmAmgettuple_val_ptr, long raw_pgsqlPgAmAmgettuple_val);
    int pgsqlPgAmAmgettuple_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmgettuple_val_ptr );
    int pgsqlPgAmAmgetmulti_map(long *mib_pgsqlPgAmAmgetmulti_val_ptr, long raw_pgsqlPgAmAmgetmulti_val);
    int pgsqlPgAmAmgetmulti_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmgetmulti_val_ptr );
    int pgsqlPgAmAmrescan_map(long *mib_pgsqlPgAmAmrescan_val_ptr, long raw_pgsqlPgAmAmrescan_val);
    int pgsqlPgAmAmrescan_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmrescan_val_ptr );
    int pgsqlPgAmAmendscan_map(long *mib_pgsqlPgAmAmendscan_val_ptr, long raw_pgsqlPgAmAmendscan_val);
    int pgsqlPgAmAmendscan_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmendscan_val_ptr );
    int pgsqlPgAmAmmarkpos_map(long *mib_pgsqlPgAmAmmarkpos_val_ptr, long raw_pgsqlPgAmAmmarkpos_val);
    int pgsqlPgAmAmmarkpos_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmmarkpos_val_ptr );
    int pgsqlPgAmAmrestrpos_map(long *mib_pgsqlPgAmAmrestrpos_val_ptr, long raw_pgsqlPgAmAmrestrpos_val);
    int pgsqlPgAmAmrestrpos_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmrestrpos_val_ptr );
    int pgsqlPgAmAmbuild_map(long *mib_pgsqlPgAmAmbuild_val_ptr, long raw_pgsqlPgAmAmbuild_val);
    int pgsqlPgAmAmbuild_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmbuild_val_ptr );
    int pgsqlPgAmAmbulkdelete_map(long *mib_pgsqlPgAmAmbulkdelete_val_ptr, long raw_pgsqlPgAmAmbulkdelete_val);
    int pgsqlPgAmAmbulkdelete_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmbulkdelete_val_ptr );
    int pgsqlPgAmAmvacuumcleanup_map(long *mib_pgsqlPgAmAmvacuumcleanup_val_ptr, long raw_pgsqlPgAmAmvacuumcleanup_val);
    int pgsqlPgAmAmvacuumcleanup_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmvacuumcleanup_val_ptr );
    int pgsqlPgAmAmcostestimate_map(long *mib_pgsqlPgAmAmcostestimate_val_ptr, long raw_pgsqlPgAmAmcostestimate_val);
    int pgsqlPgAmAmcostestimate_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmcostestimate_val_ptr );
    int pgsqlPgAmAmoptions_map(long *mib_pgsqlPgAmAmoptions_val_ptr, long raw_pgsqlPgAmAmoptions_val);
    int pgsqlPgAmAmoptions_get( pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, long * pgsqlPgAmAmoptions_val_ptr );


int pgsqlPgAmTable_indexes_set_tbl_idx(pgsqlPgAmTable_mib_index *tbl_idx, char *pgsnmpdConnID_val_ptr,  size_t pgsnmpdConnID_val_ptr_len, long rdbmsDbIndex_val, long pgsqlPgAmEntryOID_val);
int pgsqlPgAmTable_indexes_set(pgsqlPgAmTable_rowreq_ctx *rowreq_ctx, char *pgsnmpdConnID_val_ptr,  size_t pgsnmpdConnID_val_ptr_len, long rdbmsDbIndex_val, long pgsqlPgAmEntryOID_val);




#ifdef __cplusplus
}
#endif

#endif /* PGSQLPGAMTABLE_DATA_GET_H */
/** @} */
